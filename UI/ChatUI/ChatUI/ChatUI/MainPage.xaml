<Page
	x:Class="ChatUI.MainPage"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:android="http://uno.ui/android"
	xmlns:behaviors="using:ChatUI.Behaviors"
	xmlns:converters="using:ChatUI.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:ios="http://uno.ui/ios"
	xmlns:local="using:ChatUI"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:xamarin="http://uno.ui/xamarin"
	Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
	mc:Ignorable="d ios android xamarin">

	<Page.Resources>
		<ResourceDictionary>
			<converters:FromNullableBoolToVisibilityConverter x:Key="BooleanToVisibility" VisibilityIfTrue="Visible" />

			<Style TargetType="ListView">
				<Setter Property="RenderTransformOrigin" Value=".5,.5" />
				<Setter Property="RenderTransform">
					<Setter.Value>
						<ScaleTransform ScaleY="-1" />
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="ListViewItem">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ListViewItem">
							<Grid
								x:Name="ContentBorder"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								RenderTransformOrigin=".5,.5">
								<Grid.RenderTransform>
									<!--  Setting the RenderTransform on the ListViewItem itself is not supported by Uno, we need to set it on the first child instead  -->
									<ScaleTransform ScaleY="-1" />
								</Grid.RenderTransform>
								<Grid
									x:Name="ContentPresenterGrid"
									Margin="0,0,0,0"
									Background="Transparent">
									<Grid.RenderTransform>
										<TranslateTransform x:Name="ContentPresenterTranslateTransform" />
									</Grid.RenderTransform>
									<ContentPresenter
										x:Name="ContentPresenter"
										Margin="{TemplateBinding Padding}"
										HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
										xamarin:ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
										Content="{TemplateBinding Content}"
										ContentTemplate="{TemplateBinding ContentTemplate}"
										ContentTransitions="{TemplateBinding ContentTransitions}" />
								</Grid>
								<!--
									The 'Xg' text simulates the amount of space one line of text will occupy.
									In the DataPlaceholder state, the Content is not loaded yet so we
									approximate the size of the item using placeholder text.
								-->
								<TextBlock
									x:Name="PlaceholderTextBlock"
									Margin="{TemplateBinding Padding}"
									AutomationProperties.AccessibilityView="Raw"
									Foreground="{x:Null}"
									IsHitTestVisible="False"
									Opacity="0"
									Text="Xg" />
								<Rectangle
									x:Name="PlaceholderRect"
									Fill="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}"
									Visibility="Collapsed" />
								<Rectangle
									x:Name="MultiArrangeOverlayBackground"
									Grid.ColumnSpan="2"
									Fill="{ThemeResource ListViewItemDragBackgroundThemeBrush}"
									IsHitTestVisible="False"
									Opacity="0" />
								<Border
									x:Name="MultiSelectSquare"
									Width="20"
									Height="20"
									Margin="12,0,0,0"
									HorizontalAlignment="Left"
									VerticalAlignment="Center"
									BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
									BorderThickness="2"
									Visibility="Collapsed">
									<Border.Clip>
										<RectangleGeometry Rect="0,0,20,20">
											<win:RectangleGeometry.Transform>
												<TranslateTransform x:Name="MultiSelectClipTransform" />
											</win:RectangleGeometry.Transform>
										</RectangleGeometry>
									</Border.Clip>
									<Border.RenderTransform>
										<TranslateTransform x:Name="MultiSelectCheckBoxTransform" />
									</Border.RenderTransform>
									<FontIcon
										x:Name="MultiSelectCheck"
										win:Glyph="&#xE73E;"
										xamarin:Glyph="&#xE081;"
										FontFamily="{ThemeResource SymbolThemeFontFamily}"
										FontSize="16"
										Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
										Opacity="0"
										Visibility="Collapsed" />
								</Border>
								<TextBlock
									x:Name="MultiArrangeOverlayText"
									Grid.ColumnSpan="2"
									Margin="18,9,18,0"
									AutomationProperties.AccessibilityView="Raw"
									FontFamily="{ThemeResource ContentControlThemeFontFamily}"
									FontSize="26.667"
									Foreground="{ThemeResource ListViewItemDragForegroundThemeBrush}"
									IsHitTestVisible="False"
									Opacity="0"
									Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.DragItemsCount}"
									TextTrimming="WordEllipsis"
									TextWrapping="Wrap" />
								<VisualStateManager.VisualStateGroups>
									<VisualStateGroup x:Name="DisabledStates">
										<VisualState x:Name="Enabled" />
										<VisualState x:Name="Disabled">
											<Storyboard>
												<DoubleAnimation
													Storyboard.TargetName="ContentBorder"
													Storyboard.TargetProperty="Opacity"
													To="{ThemeResource ListViewItemDisabledThemeOpacity}"
													Duration="0" />
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="MultiSelectStates">
										<VisualState x:Name="MultiSelectDisabled">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
													<EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
													<SplineDoubleKeyFrame
														KeySpline="0.1,0.9,0.2,1"
														KeyTime="0:0:0.333"
														Value="-32" />
												</DoubleAnimationUsingKeyFrames>
												<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
													<EasingDoubleKeyFrame KeyTime="0:0:0" Value="0" />
													<SplineDoubleKeyFrame
														KeySpline="0.1,0.9,0.2,1"
														KeyTime="0:0:0.333"
														Value="32" />
												</win:DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
													<EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
													<SplineDoubleKeyFrame
														KeySpline="0.1,0.9,0.2,1"
														KeyTime="0:0:0.333"
														Value="0" />
												</DoubleAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
													<DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
										<VisualState x:Name="MultiSelectEnabled">
											<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform" Storyboard.TargetProperty="X">
													<EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
													<SplineDoubleKeyFrame
														KeySpline="0.1,0.9,0.2,1"
														KeyTime="0:0:0.333"
														Value="0" />
												</DoubleAnimationUsingKeyFrames>
												<win:DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform" Storyboard.TargetProperty="X">
													<EasingDoubleKeyFrame KeyTime="0:0:0" Value="32" />
													<SplineDoubleKeyFrame
														KeySpline="0.1,0.9,0.2,1"
														KeyTime="0:0:0.333"
														Value="0" />
												</win:DoubleAnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform" Storyboard.TargetProperty="X">
													<EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32" />
													<SplineDoubleKeyFrame
														KeySpline="0.1,0.9,0.2,1"
														KeyTime="0:0:0.333"
														Value="0" />
												</DoubleAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
													<DiscreteObjectKeyFrame KeyTime="0" Value="32,0,0,0" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="DataVirtualizationStates">
										<VisualState x:Name="DataAvailable" />
										<VisualState x:Name="DataPlaceholder">
											<Storyboard>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderTextBlock" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
												</ObjectAnimationUsingKeyFrames>
												<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlaceholderRect" Storyboard.TargetProperty="Visibility">
													<DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
												</ObjectAnimationUsingKeyFrames>
											</Storyboard>
										</VisualState>
									</VisualStateGroup>
									<VisualStateGroup x:Name="ReorderHintStates">
										<VisualState x:Name="NoReorderHint" />
										<VisualState x:Name="BottomReorderHint">
											<Storyboard>
												<win:DragOverThemeAnimation
													Direction="Bottom"
													ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
													TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="TopReorderHint">
											<Storyboard>
												<win:DragOverThemeAnimation
													Direction="Top"
													ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
													TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="RightReorderHint">
											<Storyboard>
												<win:DragOverThemeAnimation
													Direction="Right"
													ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
													TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="LeftReorderHint">
											<Storyboard>
												<win:DragOverThemeAnimation
													Direction="Left"
													ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
													TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0:0:0.2" To="NoReorderHint" />
										</VisualStateGroup.Transitions>
									</VisualStateGroup>
									<VisualStateGroup x:Name="DragStates">
										<VisualState x:Name="NotDragging" />
										<VisualState x:Name="Dragging">
											<Storyboard>
												<DoubleAnimation
													Storyboard.TargetName="ContentBorder"
													Storyboard.TargetProperty="Opacity"
													To="{ThemeResource ListViewItemDragThemeOpacity}"
													Duration="0" />
												<win:DragItemThemeAnimation TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="DraggingTarget">
											<Storyboard>
												<win:DropTargetItemThemeAnimation TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="MultipleDraggingPrimary">
											<Storyboard>
												<!--
													These two Opacity animations are required - the FadeInThemeAnimations
													on the same elements animate an internal Opacity.
												-->
												<DoubleAnimation
													Storyboard.TargetName="MultiArrangeOverlayBackground"
													Storyboard.TargetProperty="Opacity"
													To="1"
													Duration="0" />
												<DoubleAnimation
													Storyboard.TargetName="MultiArrangeOverlayText"
													Storyboard.TargetProperty="Opacity"
													To="1"
													Duration="0" />
												<DoubleAnimation
													Storyboard.TargetName="ContentBorder"
													Storyboard.TargetProperty="Opacity"
													To="{ThemeResource ListViewItemDragThemeOpacity}"
													Duration="0" />
												<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayBackground" />
												<win:FadeInThemeAnimation TargetName="MultiArrangeOverlayText" />
												<win:DragItemThemeAnimation TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="MultipleDraggingSecondary">
											<Storyboard>
												<win:FadeOutThemeAnimation TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualState x:Name="DraggedPlaceholder">
											<Storyboard>
												<win:FadeOutThemeAnimation TargetName="ContentBorder" />
											</Storyboard>
										</VisualState>
										<VisualStateGroup.Transitions>
											<VisualTransition GeneratedDuration="0:0:0.2" To="NotDragging" />
										</VisualStateGroup.Transitions>
									</VisualStateGroup>
								</VisualStateManager.VisualStateGroups>
							</Grid>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>

			<local:MessageTemplateSelector x:Key="MessageTemplateSelector">
				<local:MessageTemplateSelector.MyMessageTemplate>
					<DataTemplate>
						<StackPanel Margin="20,15,0,0">
							<Border
								MinWidth="300"
								MinHeight="100"
								Padding="10"
								Background="DeepPink"
								CornerRadius="10">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<TextBlock FontWeight="Bold" Text="{Binding ContactName}" />
									<TextBlock
										Grid.Row="1"
										Text="{Binding Text}"
										TextWrapping="WrapWholeWords" />
									<TextBlock
										Grid.Row="2"
										HorizontalAlignment="Right"
										Text="{Binding UserFriendlyTimestamp}" />
								</Grid>
							</Border>
							<Polygon
								Margin="0,0,10,0"
								HorizontalAlignment="Right"
								Fill="DeepPink"
								Points="0,0 10,0 10,10"
								Visibility="{Binding IsLastInSequence, Converter={StaticResource BooleanToVisibility}}" />
						</StackPanel>
					</DataTemplate>
				</local:MessageTemplateSelector.MyMessageTemplate>
				<local:MessageTemplateSelector.OtherMessageTemplate>
					<DataTemplate>
						<StackPanel Margin="0,15,20,0">
							<Border
								MinWidth="300"
								MinHeight="100"
								Padding="10"
								Background="DeepSkyBlue"
								CornerRadius="10">
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition Height="*" />
										<RowDefinition Height="*" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
									<TextBlock FontWeight="Bold" Text="{Binding ContactName}" />
									<TextBlock
										Grid.Row="1"
										Text="{Binding Text}"
										TextWrapping="WrapWholeWords" />
									<TextBlock
										Grid.Row="2"
										HorizontalAlignment="Right"
										Text="{Binding UserFriendlyTimestamp}" />
								</Grid>
							</Border>
							<Polygon
								Margin="10,0,0,0"
								HorizontalAlignment="Left"
								Fill="DeepSkyBlue"
								Points="0,0 10,0 0,10"
								Visibility="{Binding IsLastInSequence, Converter={StaticResource BooleanToVisibility}}" />
						</StackPanel>
					</DataTemplate>
				</local:MessageTemplateSelector.OtherMessageTemplate>
			</local:MessageTemplateSelector>
		</ResourceDictionary>
	</Page.Resources>
	
	<ScrollViewer x:Name="scrollViewer"
				  behaviors:ScrollToBottomBehavior.IsAttached="{Binding IsMessageSent}">
		<Grid>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<ListView Grid.Row="0"
					  ItemTemplateSelector="{StaticResource MessageTemplateSelector}"
					  ItemsSource="{Binding Messages}" />
			<Grid Grid.Row="1"
				  HorizontalAlignment="Stretch"
				  VerticalAlignment="Bottom">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBox x:Name="MessageTextBox"
						 Grid.Column="0"
						 Margin="10,0,0,10"
						 HorizontalAlignment="Stretch"
						 behaviors:CommandOnKeyPressBehavior.TextBoxCommand="{Binding AddMessage}"
						 Text="{Binding CurrentMessage, Mode=TwoWay}" />
				<Button x:Name="SendButton"
						Grid.Column="1"
						Margin="10,0,10,10"
						Command="{Binding AddMessage}"
						CommandParameter="{Binding CurrentMessage}"
						Content="Send" />
			</Grid>
		</Grid>
	</ScrollViewer>
</Page>
