<UserControl x:Class="SkeletonLoaderAnimation.Presentation.LoaderControl"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="using:SkeletonLoaderAnimation.Presentation"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 mc:Ignorable="d"
			 d:DesignHeight="300"
			 d:DesignWidth="400"
			 Loaded="UserControl_Loaded">

	<UserControl.Resources>
		<Storyboard x:Name="LoaderAnimation">

			<ColorAnimationUsingKeyFrames Storyboard.TargetName="RectItemBrush"
										  Storyboard.TargetProperty="Color"
										  AutoReverse="True"
										  RepeatBehavior="Forever"
										  Duration="0:0:2">
				
				 
			<!--Go from green to red in the first 2 seconds. LinearColorKeyFrame creates
                a smooth, linear animation between values.-->

				<LinearColorKeyFrame Value="DarkGray"
									 KeyTime="00:00:02" />

				
				 
			<!--In the next half second, go to yellow. DiscreteColorKeyFrame creates a 
                sudden jump between values.-->

				<DiscreteColorKeyFrame Value="#7f7f7f7f"
									   KeyTime="00:00:2.5" />

				
				 
			<!--In the final 2 seconds of the animation, go from yellow back to green. SplineColorKeyFrame 
                creates a variable transition between values depending on the KeySpline property. In this example,
                the animation starts off slow but toward the end of the time segment, it speeds up exponentially.-->
			
				
				<SplineColorKeyFrame Value="DarkGray"
									 KeyTime="00:00:4.5"
									 KeySpline="0.6,0.0 0.9,0.00" />
				<EasingColorKeyFrame>
					<EasingColorKeyFrame.EasingFunction>
						<ExponentialEase EasingMode="EaseIn" />
					</EasingColorKeyFrame.EasingFunction>
				</EasingColorKeyFrame>
			</ColorAnimationUsingKeyFrames>

			<!--<ColorAnimation Storyboard.TargetName="RectItem"
							Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.GradientStops)[0].(GradientStop.Color)"
							From="#7f7f7f7f"
							To="DarkGray"
							RepeatBehavior="Forever"
							EnableDependentAnimation="True"
							AutoReverse="False"
							Duration="0:0:3" />
			<ColorAnimation Storyboard.TargetName="RectItem"
							Storyboard.TargetProperty="(Shape.Fill).(LinearGradientBrush.GradientStops)[1].(GradientStop.Color)"
							From="DarkGray"
							To="#7f7f7f7f"
							AutoReverse="False"
							EnableDependentAnimation="True"
							RepeatBehavior="Forever"
							Duration="0:0:3" />-->

		</Storyboard>
	</UserControl.Resources>

	<Border CornerRadius="10">
		<Rectangle x:Name="RectItem"
				   Height="70"
				   Width="350">
			<Rectangle.Fill>
				<!--<LinearGradientBrush StartPoint="0,0"
									 EndPoint="1,1">
					<GradientStop Offset="0.0"
								  Color="DarkGray"
								  x:Name="StopOne" />
					<GradientStop Offset="1.0"
								  Color="#7f7f7f7f" />
				</LinearGradientBrush>-->
				<SolidColorBrush Color="DarkGray"
								 x:Name="RectItemBrush" />
			</Rectangle.Fill>
		</Rectangle>
	</Border>
</UserControl>