jobs:
- job: VS_Latest
  timeoutInMinutes: 600

  pool:
    vmImage: windows-2022

  steps:
  - checkout: self
    clean: true
  
  - ${{ if startsWith(variables['Build.SourceBranch'], 'refs/heads/canaries') }}:
    - template: .vsts-ci.canaries.yml

  # Restore nuget.org to the list of existing sources, .NET 6 Pre 2 may somehow remove it
  # - powershell: |
  #     dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org | Out-Null
  #     $global:LASTEXITCODE = 0
  #   displayName: Adjust nuget.org source

  # - template: build/templates/dotnet-install-windows.yml

  # - powershell: |
  #       & choco install vswhere
  #       $msbuildpath=(vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe -nologo)

  #       echo "##vso[task.setvariable variable=msbuildpath]$msbuildpath"
  #   displayName: Set MSBUILDPATH

  # - powershell: |
  #     $dict = New-Object 'System.Collections.Generic.Dictionary[String,System.Collections.Generic.Dictionary[String,String]]'
  #     $samples = Get-ChildItem -Path **\*.sln -Recurse | Where-Object {$_.FullName -notmatch "\\ArchivedProjects\\"}
  #     foreach($sample in $samples){
  #       $item = New-Object 'System.Collections.Generic.Dictionary[String,String]'
  #       $item.Add("solutionname", $sample.FullName)
  #       if(!$dict.ContainsKey($sample.Name)){
  #         $dict.Add($sample.Name, $item)
  #       }
  #     }

  #     $SolutionsJson = $dict | ConvertTo-Json
      
  #     Write-Host $SolutionsJson
  #     Write-Host "##vso[task.setvariable variable=samplesJson;isOutput=true]$SolutionsJson"
  #   name: generateJson
  #   displayName: Generate Json of Samples

- template: .azure-pipelines.BuildMatrix.yml

  # - task: PublishBuildArtifacts@1
  #   inputs:
  #     pathtoPublish: $(Build.ArtifactStagingDirectory)
